# This is a basic workflow to help you get started with Actions

name: Deploy to SAP Cloud Platform

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
#  build:
#    # The type of runner that the job will run on
#    runs-on: ubuntu-latest
#
#    # Steps represent a sequence of tasks that will be executed as part of the job
#    steps:
#      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#      - name: Code Checkout
#        uses: actions/checkout@v2
#      #Prepare NodeJs
#      - name: Use Node.js
#        uses: actions/setup-node@v1
#        with:
#          node-version: 12
#      #Install the MTA Build tool
#      - name: Install MTA build tool
#        run: npm install -g mbt
#      # Do not generate package-lock.json
#      # See https://blogs.sap.com/2020/07/07/escaping-eintegrity-hell/
#      - name: Disable package-lock.json
#        run: npm config set package-lock false
#      - name: Build MTA
#        run: mbt build -p cf
#- name: Upload Artifact
#        uses: actions/upload-artifact@master
#        with:
#          name: mta
#          path: ./mta_archives/my-bookshop-git2_1.0.0.mtar
  
  deploy:
#    needs: build
    runs-on: ubuntu-latest
    steps:
#     - name: Download Artifact
#       uses: actions/download-artifact@master
#       with:
#         #name should correspond to the name of the upload step
#         name: mta
#         path: ./
     - name: Deploy to Cloud Foundry
       uses: bdelangh/cf-cli-action@main
       with:
         cf_api: ${{ secrets.CF_API }}
         cf_username: ${{ secrets.CF_USERNAME }}
         cf_password: ${{ secrets.CF_PASSWORD }}
         cf_org: ${{ secrets.CF_ORG }}
         cf_space: ${{ secrets.CF_SPACE }}
         command: deploy ./my-bookshop-git2_1.0.0.mtar -f 

     
